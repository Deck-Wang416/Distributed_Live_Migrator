apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: distributed-trainer
spec:
  serviceName: "distributed-trainer"
  replicas: 3
  selector:
    matchLabels:
      app: distributed-trainer
  template:
    metadata:
      labels:
        app: distributed-trainer
    spec:
      containers:
      - name: trainer
        image: deckwang/distributed-trainer:latest
        imagePullPolicy: Always
        resources:
          limits:
            memory: "4Gi"
            cpu: "2"
          requests:
            memory: "2Gi"
            cpu: "0.5"
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: WORLD_SIZE
            value: "3"
          - name: MASTER_ADDR
            value: "distributed-trainer-0.distributed-trainer.default.svc.cluster.local"
          - name: MASTER_PORT
            value: "29500"
        command:
          - /bin/bash
          - -c
          - |
            export RANK=$(echo $POD_NAME | rev | cut -d'-' -f1 | rev)
            exec python scripts/train.py
        volumeMounts:
        - mountPath: "/app/data"
          name: data-volume
        - mountPath: "/app/checkpoints"
          name: checkpoint-volume
        - mountPath: "/app/models"
          name: model-volume
        - mountPath: "/app/hf_cache"
          name: hf-cache
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: data-pvc
      - name: checkpoint-volume
        persistentVolumeClaim:
          claimName: checkpoint-pvc
      - name: model-volume
        persistentVolumeClaim:
          claimName: model-pvc
      - name: hf-cache
        emptyDir: {}
